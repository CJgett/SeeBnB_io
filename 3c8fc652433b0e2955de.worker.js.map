{"version":3,"sources":["webpack://lib/webpack/bootstrap","webpack://lib/./src/constants.js","webpack://lib/./src/solvers/cost.js","webpack://lib/./src/solvers/initial-solution/simulatedAnnealing.worker.js","webpack://lib/./src/solvers/makeSolver.js","webpack://lib/./src/store/actions.js","webpack://lib/./src/store/emitCustomEvent.js"],"names":["START_POINT_COLOR","POINT_COLOR","BEST_PATH_COLOR","EVALUATING_PATH_COLOR","EVALUATING_ERROR_COLOR","EVALUATING_SEGMENT_COLOR","COLOR_MODE_KEY","distance","pt1","pt2","lng1","lat1","lng2","lat2","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","pathCost","path","slice","map","point","idx","reduce","a","b","counterClockWise","p","q","r","intersects","c","d","setDifference","setA","setB","ret","Set","forEach","delete","rotateToStartingPoint","startingPoint","startIdx","findIndex","unshift","splice","length","wrapSolver","solver","args","self","postMessage","actions","makeSolver","run","solverConfig","detailLevel","delay","fullSpeed","stepping","bestCostFromHeuristic","Number","POSITIVE_INFINITY","paused","setBestPath","setEvaluatingPaths","getPaths","lowerBound","level","round","paths","cost","updateTree","setEvaluatingPath","getPath","waitPause","Promise","resolve","setTimeout","sleep","duration","saveRunDetails","row","onmessage","data","action","type","evaluatingDetailLevel","points","searchStrategy","boundingStrategy","initialSolution","instance","runID","Error","SET_VIEWPORT_STATE","UPDATE_TREE","UPDATE_NUM_NODES","UPDATE_RUN_TABLE","RESET_RUN_TABLE","RESET_EVALUATING_STATE","RESET_BEST_PATH_STATE","SET_INITIAL_SOLUTION","SET_SEARCH_STRATEGY","SET_BOUNDING_STRATEGY","SET_ALGORITHM","SET_ALGORITHM_TYPE","SET_ALGORITHM_STAGE","SET_DELAY","SET_EVALUATING_DETAIL_LEVEL","SET_SHOW_BEST_PATH","START_SOLVING","GO_FULL_SPEED","GO_STEP_BY_STEP","STOP_STEPPING","PAUSE","UNPAUSE","STOP_SOLVING","SET_BEST_PATH","SET_EVALUATING_PATHS","START_DEFINING_POINTS","ADD_DEFINED_POINT","STOP_DEFINING_POINTS","SET_POINT_COUNT","SET_POINTS","SET_TABLE_INSTANCE","SET_DEFAULT_MAP","SET_DROPDOWN_MAP","TOGGLE_SITE_INFO_OPEN","TOGGLE_ALG_INFO_OPEN","TOGGLE_INSTANCE_INFO_OPEN","TOGGLE_EXPANDED_TREE_OPEN","getRandomPoint","max","min","random","toggleSiteInfoOpen","toggleAlgInfoOpen","toggleInstanceInfoOpen","toggleExpandedTreeOpen","setViewportState","viewport","tree","numNodes","updateNumNodes","updateRunTable","resetRunTable","resetEvaluatingStateAction","resetBestPathStateAction","setInitialSolutionAction","defaults","setSearchStrategyAction","setBoundingStrategyAction","setAlgorithmAction","algorithm","setAlgorithmTypeAction","algorithmType","setAlgorithmStage","isRunningBnB","startSolvingAction","stopSolvingAction","setAlgorithm","dispatch","setAlgorithmType","setInitialSolution","setSearchStrategy","setBoundingStrategy","setDelay","setEvaluatingDetailLevel","setShowBestPath","show","resetSolverState","stopSolving","startSolving","getState","pointCount","bestCost","gtmEmit","event","goFullSpeed","goStepByStep","stopStepping","pause","unpause","setDefaultMapAction","setTableInstance","setDropdownMapAction","setPointsAction","setPointCountAction","count","startDefiningPointsAction","startDefiningPoints","addDefinedPoint","stopDefiningPoints","setPointCount","randomizePoints","bounds","top","bottom","left","right","Array","from","_","Date","now","toString","setDefaultMap","setDropdownMap","ev","window","dataLayer","push","console","log"],"mappings":"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","file":"3c8fc652433b0e2955de.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/solvers/initial-solution/simulatedAnnealing.worker.js\");\n","// orangish\nexport const START_POINT_COLOR = [255, 87, 34];\n\n// blueish\nexport const POINT_COLOR = [41, 121, 255];\n\n// greenish\nexport const BEST_PATH_COLOR = [76, 175, 80];\n\n// orangish\nexport const EVALUATING_PATH_COLOR = [255, 87, 34, 225];\n\n// reddish\nexport const EVALUATING_ERROR_COLOR = [255, 25, 25, 240];\n\n// greyish\nexport const EVALUATING_SEGMENT_COLOR = [180, 180, 180, 240];\n\nexport const COLOR_MODE_KEY = \"color-mode\";\n","// haversine great circle distance\nexport const distance = (pt1, pt2) => {\n  const [lng1, lat1] = pt1;\n  const [lng2, lat2] = pt2;\n  if ((lat1 === lat2 && lng1 === lng2) || (pt1 === pt2)) {\n    return 0;\n  }\n\n  var radlat1 = (Math.PI * lat1) / 180;\n  var radlat2 = (Math.PI * lat2) / 180;\n\n  var theta = lng1 - lng2;\n  var radtheta = (Math.PI * theta) / 180;\n\n  var dist =\n    Math.sin(radlat1) * Math.sin(radlat2) +\n    Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\n\n  if (dist > 1) {\n    dist = 1;\n  }\n  dist = Math.acos(dist);\n  dist = (dist * 180) / Math.PI;\n  return dist * 60 * 1.1515 * 1.609344;\n};\n\nexport const pathCost = path => {\n  return path\n    .slice(0, -1)\n    .map((point, idx) => distance(point, path[idx + 1]))\n    .reduce((a, b) => a + b, 0);\n};\n\nexport const counterClockWise = (p, q, r) => {\n  return (q[0] - p[0]) * (r[1] - q[1]) < (q[1] - p[1]) * (r[0] - q[0]);\n};\n\nexport const intersects = (a, b, c, d) => {\n  return (\n    counterClockWise(a, c, d) !== counterClockWise(b, c, d) &&\n    counterClockWise(a, b, c) !== counterClockWise(a, b, d)\n  );\n};\n\nexport const setDifference = (setA, setB) => {\n  const ret = new Set(setA);\n  setB.forEach(p => {\n    ret.delete(p);\n  });\n  return ret;\n};\n\nexport const rotateToStartingPoint = (path, startingPoint) => {\n  const startIdx = path.findIndex(p => p === startingPoint);\n  path.unshift(...path.splice(startIdx, path.length));\n};\n\n","/* eslint-disable no-restricted-globals */\nimport makeSolver from \"../makeSolver\";\nimport { pathCost, distance, rotateToStartingPoint } from \"../cost\";\nimport { EVALUATING_PATH_COLOR } from \"../../constants\";\n\nconst simulatedAnnealing = async points => {\n  const sp = points[0];\n  const path = points;\n\n  const tempCoeff =\n    path.length < 10\n      ? 1 - 1e-4\n      : path.length < 15\n      ? 1 - 1e-5\n      : path.length < 30\n      ? 1 - 1e-6\n      : 1 - 5e-7;\n\n  const deltaDistance = (aIdx, bIdx) => {\n    const aPrev = (aIdx - 1 + path.length) % path.length;\n    const aNext = (aIdx + 1 + path.length) % path.length;\n    const bPrev = (bIdx - 1 + path.length) % path.length;\n    const bNext = (bIdx + 1 + path.length) % path.length;\n    let diff =\n      distance(path[bPrev], path[aIdx]) +\n      distance(path[aIdx], path[bNext]) +\n      distance(path[aPrev], path[bIdx]) +\n      distance(path[bIdx], path[aNext]) -\n      distance(path[aPrev], path[aIdx]) -\n      distance(path[aIdx], path[aNext]) -\n      distance(path[bPrev], path[bIdx]) -\n      distance(path[bIdx], path[bNext]);\n\n    if (bPrev === aIdx || bNext === aIdx) {\n      diff += 2 * distance(path[aIdx], path[bIdx]);\n    }\n    return diff;\n  };\n\n  const changePath = temperature => {\n    // 2 random points\n    const a = 1 + Math.floor(Math.random() * (path.length - 1));\n    const b = 1 + Math.floor(Math.random() * (path.length - 1));\n\n    const delta = deltaDistance(a, b);\n    if (delta < 0 || Math.random() < Math.exp(-delta / temperature)) {\n      // swap points\n      [path[a], path[b]] = [path[b], path[a]];\n    }\n  };\n\n  const initialTemp = 100 * distance(path[0], path[1]);\n  let i = 0;\n\n  for (\n    let temperature = initialTemp;\n    temperature > 1e-6;\n    temperature *= tempCoeff\n  ) {\n    changePath(temperature);\n    if (i % 10000 == 0) {\n      self.setEvaluatingPaths(() => ({\n        paths: [{ path, color: EVALUATING_PATH_COLOR }],\n        cost: pathCost(path)\n      }));\n      await self.sleep();\n    }\n    if (i % 100000 == 0) {\n      path.push(sp);\n      self.setBestPath(path, pathCost(path));\n      path.pop();\n    }\n    i++;\n  }\n\n  // rotate the array so that starting point is back first\n  rotateToStartingPoint(path, sp);\n\n  // go back home\n  path.push(sp);\n  const cost = pathCost(path);\n\n  self.setEvaluatingPaths(() => ({\n    paths: [{ path }],\n    cost\n  }));\n  self.setBestPath(path, cost);\n};\n\nmakeSolver(simulatedAnnealing);\n","/* eslint-disable no-restricted-globals */\nimport * as actions from \"../store/actions\";\n\nconst wrapSolver = solver => async (...args) => {\n  await solver(...args);\n  self.postMessage(actions.stopSolvingAction());\n  self.postMessage(actions.setAlgorithmStage(\"toggle\"));\n};\n\nexport const makeSolver = solver => {\n  const run = wrapSolver(solver);\n\n  self.solverConfig = {\n    detailLevel: 0,\n    delay: 10,\n    fullSpeed: false,\n    stepping: true,\n    bestCostFromHeuristic: Number.POSITIVE_INFINITY,\n    paused: false\n  };\n\n  self.setBestPath = (...args) => {\n    self.postMessage(actions.setBestPath(...args));\n  };\n\n  self.setEvaluatingPaths = (getPaths, lowerBound = null, level = 1) => {\n    if (lowerBound !== null) {\n      lowerBound = Math.round(lowerBound * 100) / 100;\n    }\n    if (self.solverConfig.detailLevel >= level) {\n      const { paths, cost } = getPaths();\n      self.postMessage(actions.setEvaluatingPaths(paths, cost, lowerBound));\n    }\n  };\n\n  self.updateTree = (...args) => {\n    self.postMessage(actions.updateTree(...args));\n  };\n\n  self.setEvaluatingPath = (getPath, level = 1) => {\n    if (self.solverConfig.detailLevel >= level) {\n      const { path, cost } = getPath();\n      self.postMessage(actions.setEvaluatingPath(path, cost));\n    }\n  };\n\n  self.waitPause = async () => {\n    while (self.solverConfig.paused) {\n      await new Promise(resolve => setTimeout(resolve, 500));\n    }\n  };\n\n  self.sleep = async () => {\n    if (self.solverConfig.stepping) {\n      self.postMessage(actions.pause());\n      self.solverConfig.paused = true;\n    }\n    if (self.solverConfig.paused) {\n      return await self.waitPause();\n    }\n\n    const duration = self.solverConfig.fullSpeed\n      ? 0\n      : self.solverConfig.delay || 10;\n    return new Promise(resolve => {\n      setTimeout(resolve, duration);\n    });\n  };\n\n  self.saveRunDetails = (row) => {\n    self.postMessage(actions.updateRunTable(row));\n  };\n\n  self.onmessage = async ({ data: action }) => {\n    switch (action.type) {\n      case actions.START_SOLVING:\n        self.solverConfig.delay = action.delay;\n        self.solverConfig.detailLevel = action.evaluatingDetailLevel;\n        self.solverConfig.fullSpeed = action.fullSpeed;\n        self.solverConfig.stepping = action.stepping;\n        self.solverConfig.bestCostFromHeuristic = action.bestCostFromHeuristic;\n        self.solverConfig.paused = false;\n        run(action.points, action.bestCostFromHeuristic, action.searchStrategy, action.boundingStrategy, action.initialSolution, action.instance, action.runID);\n        break;\n\n      case actions.SET_DELAY:\n        self.solverConfig.delay = action.delay;\n        break;\n\n      case actions.SET_EVALUATING_DETAIL_LEVEL:\n        self.solverConfig.detailLevel = action.level;\n        break;\n\n      case actions.GO_FULL_SPEED:\n        self.solverConfig.evaluatingDetailLevel = 0;\n        self.solverConfig.fullSpeed = true;\n        break;\n\n    case actions.GO_STEP_BY_STEP:\n        self.solverConfig.stepping = true;\n        break;\n\n      case actions.STOP_STEPPING:\n        self.solverConfig.stepping = false;\n\n      case actions.PAUSE:\n        self.solverConfig.paused = true;\n        break;\n\n      case actions.UNPAUSE:\n        self.solverConfig.paused = false;\n        break;\n\n      default:\n        throw new Error(`invalid action sent to solver ${action.type}`);\n    }\n  };\n};\n\nexport default makeSolver;\n","import gtmEmit from \"./emitCustomEvent\";\nexport const SET_VIEWPORT_STATE = \"SET_VIEWPORT_STATE\";\n\nexport const UPDATE_TREE = \"UPDATE_TREE\";\nexport const UPDATE_NUM_NODES = \"UPDATE_NUM_NODES\";\nexport const UPDATE_RUN_TABLE = \"UPDATE_RUN_TABLE\";\nexport const RESET_RUN_TABLE = \"RESET_RUN_TABLE\";\n\nexport const RESET_EVALUATING_STATE = \"RESET_EVALUATING_STATE\";\nexport const RESET_BEST_PATH_STATE = \"RESET_BEST_PATH_STATE\";\n\nexport const SET_INITIAL_SOLUTION = \"SET_INITIAL_SOLUTION\";\nexport const SET_SEARCH_STRATEGY = \"SET_SEARCH_STRATEGY\";\nexport const SET_BOUNDING_STRATEGY = \"SET_BOUNDING_STRATEGY\";\nexport const SET_ALGORITHM = \"SET_ALGORITHM\";\nexport const SET_ALGORITHM_TYPE = \"SET_ALGORITHM_TYPE\";\nexport const SET_ALGORITHM_STAGE = \"SET_ALGORITHM_STAGE\";\nexport const SET_DELAY = \"SET_DELAY\";\nexport const SET_EVALUATING_DETAIL_LEVEL = \"SET_EVALUATING_DETAIL_LEVEL\";\nexport const SET_SHOW_BEST_PATH = \"SET_SHOW_BEST_PATH\";\nexport const START_SOLVING = \"START_SOLVING\";\nexport const GO_FULL_SPEED = \"GO_FULL_SPEED\";\nexport const GO_STEP_BY_STEP = \"GO_STEP_BY_STEP\";\nexport const STOP_STEPPING = \"STOP_STEPPING\";\nexport const PAUSE = \"PAUSE\";\nexport const UNPAUSE = \"UNPAUSE\";\nexport const STOP_SOLVING = \"STOP_SOLVING\";\n\nexport const SET_BEST_PATH = \"SET_BEST_PATH\";\nexport const SET_EVALUATING_PATHS = \"SET_EVALUATING_PATHS\";\n\nexport const START_DEFINING_POINTS = \"START_DEFINING_POINTS\";\nexport const ADD_DEFINED_POINT = \"ADD_DEFINED_POINT\";\nexport const STOP_DEFINING_POINTS = \"STOP_DEFINING_POINTS\";\nexport const SET_POINT_COUNT = \"SET_POINT_COUNT\";\nexport const SET_POINTS = \"SET_POINTS\";\nexport const SET_TABLE_INSTANCE = \"SET_TABLE_INSTANCE\";\nexport const SET_DEFAULT_MAP = \"SET_DEFAULT_MAP\";\nexport const SET_DROPDOWN_MAP = \"SET_DROPDOWN_MAP\";\n\nexport const TOGGLE_SITE_INFO_OPEN = \"TOGGLE_SITE_INFO_OPEN\";\nexport const TOGGLE_ALG_INFO_OPEN = \"TOGGLE_ALG_INFO_OPEN\";\nexport const TOGGLE_INSTANCE_INFO_OPEN = \"TOGGLE_INSTANCE_INFO_OPEN\";\nexport const TOGGLE_EXPANDED_TREE_OPEN = \"TOGGLE_EXPANDED_TREE_OPEN\";\n\nconst getRandomPoint = (max, min) => Math.random() * (max - min) + min;\n\n//\n// BASIC UI\n//\nexport const toggleSiteInfoOpen = () => ({\n  type: TOGGLE_SITE_INFO_OPEN\n});\n\nexport const toggleAlgInfoOpen = () => ({\n  type: TOGGLE_ALG_INFO_OPEN\n});\n\nexport const toggleInstanceInfoOpen = () => ({\n  type: TOGGLE_INSTANCE_INFO_OPEN\n});\n\nexport const toggleExpandedTreeOpen = () => ({\n  type: TOGGLE_EXPANDED_TREE_OPEN\n});\n\n//\n// MAP INTERACTION\n//\nexport const setViewportState = viewport => ({\n  type: SET_VIEWPORT_STATE,\n  viewport\n});\n\n//\n// BOTTOM MENU \n//\nexport const updateTree = (tree, numNodes) => ({\n  type: UPDATE_TREE,\n  tree,\n  numNodes\n});\n\nexport const updateNumNodes = numNodes => ({\n  type: UPDATE_NUM_NODES,\n  numNodes\n});\n\nexport const updateRunTable = row => ({\n  type: UPDATE_RUN_TABLE,\n  row \n});\n\nexport const resetRunTable = () => ({\n  type: RESET_RUN_TABLE\n});\n\n//\n// SOLVER CONTROLS\n//\nconst resetEvaluatingStateAction = () => ({\n  type: RESET_EVALUATING_STATE\n});\n\nconst resetBestPathStateAction = () => ({\n  type: RESET_BEST_PATH_STATE\n});\n\nconst setInitialSolutionAction = (initialSolution, defaults) => ({\n  type: SET_INITIAL_SOLUTION,\n  initialSolution,\n  defaults\n});\n\nconst setSearchStrategyAction = (searchStrategy, defaults) => ({\n  type: SET_SEARCH_STRATEGY,\n  searchStrategy,\n  defaults\n});\n\nconst setBoundingStrategyAction = (boundingStrategy, defaults) => ({\n  type: SET_BOUNDING_STRATEGY,\n  boundingStrategy,\n  defaults\n});\n\nconst setAlgorithmAction = (algorithm, defaults) => ({\n  type: SET_ALGORITHM,\n  algorithm,\n  defaults\n});\n\nconst setAlgorithmTypeAction = (algorithmType, defaults) => ({\n  type: SET_ALGORITHM_TYPE,\n  algorithmType,\n  defaults\n});\n\n// this EITHER toggles based on what the current value is OR sets the stage to isRunningBnB (boolean, when true, then run BranchAndBound, otherwise run heuristic)\nexport const setAlgorithmStage = (isRunningBnB) => ({\n  type: SET_ALGORITHM_STAGE,\n  isRunningBnB \n});\n\nexport const startSolvingAction = (points, delay, evaluatingDetailLevel, stepping, bestCostFromHeuristic, searchStrategy, boundingStrategy, initialSolution, instance, runID) => ({\n  type: START_SOLVING,\n  points,\n  delay,\n  fullSpeed: false,\n  evaluatingDetailLevel,\n  stepping,\n  bestCostFromHeuristic,\n  searchStrategy,\n  boundingStrategy,\n  initialSolution,\n  instance,\n  runID\n});\n\nexport const stopSolvingAction = () => ({\n  type: STOP_SOLVING\n});\n\nexport const setAlgorithm = (algorithm, defaults = {}) => dispatch => {\n  dispatch(resetEvaluatingStateAction());\n  dispatch(setAlgorithmAction(algorithm, defaults));\n};\n\nexport const setAlgorithmType = (algorithmType) => dispatch => {\n  dispatch(resetEvaluatingStateAction());\n  dispatch(setAlgorithmTypeAction(algorithmType));\n};\n\nexport const setInitialSolution = (initialSolution, defaults = {}) => dispatch => {\n  dispatch(resetEvaluatingStateAction());\n  dispatch(setInitialSolutionAction(initialSolution, defaults));\n};\n\nexport const setSearchStrategy = (searchStrategy, defaults = {}) => dispatch => {\n  dispatch(resetEvaluatingStateAction());\n  dispatch(setSearchStrategyAction(searchStrategy, defaults));\n};\n\nexport const setBoundingStrategy = (boundingStrategy, defaults = {}) => dispatch => {\n  dispatch(resetEvaluatingStateAction());\n  dispatch(setBoundingStrategyAction(boundingStrategy, defaults));\n};\n\nexport const setDelay = delay => ({\n  type: SET_DELAY,\n  delay\n});\n\nexport const setEvaluatingDetailLevel = level => ({\n  type: SET_EVALUATING_DETAIL_LEVEL,\n  level\n});\n\nexport const setShowBestPath = show => ({\n  type: SET_SHOW_BEST_PATH,\n  show\n});\n\nexport const resetSolverState = () => dispatch => {\n  dispatch(stopSolving());\n  dispatch(resetEvaluatingStateAction());\n  dispatch(resetBestPathStateAction());\n  dispatch(setAlgorithmStage(false));\n};\n\nexport const startSolving = (...args) => (dispatch, getState) => {\n  const { initialSolution, pointCount, algorithm, evaluatingDetailLevel, bestCost } = getState();\n  gtmEmit({\n    event: \"start-solving\",\n    initialSolution,\n    algorithm,\n    pointCount,\n    evaluatingDetailLevel,\n    bestCost\n  });\n  dispatch(startSolvingAction(...args));\n};\n\nexport const goFullSpeed = () => ({\n  type: GO_FULL_SPEED\n});\n\nexport const goStepByStep = () => ({\n  type: GO_STEP_BY_STEP\n});\n\nexport const stopStepping = () => ({\n  type: STOP_STEPPING\n});\n\nexport const pause = () => ({\n  type: PAUSE\n});\n\nexport const unpause = () => ({\n  type: UNPAUSE\n});\n\nexport const stopSolving = () => dispatch => {\n  dispatch(resetEvaluatingStateAction());\n  dispatch(stopSolvingAction());\n};\n\n//\n// SOLVER ACTIONS\n//\nexport const setEvaluatingPath = (path, cost) => ({\n  type: SET_EVALUATING_PATHS,\n  paths: [path],\n  cost\n});\n\nexport const setEvaluatingPaths = (paths, cost, lowerBound) => ({\n  type: SET_EVALUATING_PATHS,\n  paths,\n  cost,\n  lowerBound\n});\n\nexport const setBestPath = (path, cost) => ({\n  type: SET_BEST_PATH,\n  path,\n  cost\n});\n\n//\n// POINT CONTROLS\n//\nconst setDefaultMapAction = () => ({\n  type: SET_DEFAULT_MAP\n});\n\nexport const setTableInstance = (instance) => ({\n  type: SET_TABLE_INSTANCE,\n  instance\n});\n\nconst setDropdownMapAction = (instance) => ({\n  type: SET_DROPDOWN_MAP,\n  instance\n});\n\nconst setPointsAction = points => ({\n  type: SET_POINTS,\n  points\n});\n\nconst setPointCountAction = count => ({\n  type: SET_POINT_COUNT,\n  count\n});\n\nconst startDefiningPointsAction = () => ({\n  type: START_DEFINING_POINTS\n});\n\nexport const startDefiningPoints = () => dispatch => {\n  dispatch(resetSolverState());\n  dispatch(startDefiningPointsAction());\n};\n\nexport const addDefinedPoint = point => ({\n  type: ADD_DEFINED_POINT,\n  point\n});\n\nexport const stopDefiningPoints = () => ({\n  type: STOP_DEFINING_POINTS\n});\n\nexport const setPointCount = count => dispatch => {\n  dispatch(resetSolverState());\n  dispatch(setPointCountAction(count));\n};\n\nexport const randomizePoints = bounds => (dispatch, getState) => {\n  const { pointCount } = getState();\n  const { top, bottom, left, right } = bounds;\n  const points = Array.from({ length: pointCount }).map(_ => [\n    getRandomPoint(right, left),\n    getRandomPoint(top, bottom)\n  ]);\n  const instance = pointCount + \"nodes_\" + Date.now().toString().slice(8);\n  dispatch(resetSolverState());\n  dispatch(setPointsAction(points));\n  dispatch(setTableInstance(instance));\n};\n\nexport const setDefaultMap = (...args) => dispatch => {\n  dispatch(resetSolverState());\n  dispatch(setDefaultMapAction());\n};\n\nexport const setDropdownMap = (instance) => dispatch => {\n  dispatch(resetSolverState());\n  dispatch(setDropdownMapAction(instance));\n  dispatch(setTableInstance(instance));\n};\n","export default ev => {\n  if (typeof window !== \"undefined\" && window.dataLayer) {\n    window.dataLayer.push(ev);\n  } else {\n    console.log(ev);\n  }\n};\n"],"sourceRoot":""}